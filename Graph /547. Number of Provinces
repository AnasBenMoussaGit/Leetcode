Link : https://leetcode.com/problems/number-of-provinces/

const int N=205;
vector<int>adj[N];
bool vis[N];
void dfs(int n){
    vis[n]=1;
    for(auto u:adj[n]){
        if(vis[u])
            continue;
        dfs(u);
    }

}
class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        memset(vis,0,sizeof(vis));
        for(int i=0;i<isConnected.size();i++){
            adj[i].clear();
        }
        for(int i=0;i<isConnected.size();i++){
            for(int j=i+1;j<isConnected.size();j++){
                if(isConnected[i][j]){
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }
        int res=0;
        for(int i=0;i<isConnected.size();i++){
            if(vis[i])
            {
                continue;
            }
            dfs(i);
            res++;
        }
        return res;
}
};
